version: '3.8'

services:

  DataRetrieval:
    image: shmuelblau/DataRetrieval:1
    container_name: DataRetrieval
    restart: always
    ports:
      - "8001:8000"
    depends_on:
      - mongo

    environment:
      
      # CONNECTION_STRING: "mongodb://shmuel:1234@mongo:27017/fromkafka?authSource=admin"
      # COLLECTION1: interesting 
      # COLLECTION1: interesting
      # DATABASE: fromkafka
     
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      Models:

  Persister:
    image: shmuelblau/Persister:1
    container_name: Persister
    restart: always
    ports:
      - "8002:8000"
    depends_on:
      - kafka
    environment:
      # COLLECTION: not_interesting 
      KAFKA_HOST: kafka

    command: ["python" , "main.py"]
    networks:
      Models:


  Enricher:
    image: shmuelblau/Enricher:1
    container_name: Enricher
    
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    environment:
      # HOST: kafka
    command: ["python" , "main.py"]
    networks:
      Models:

  


  zookeeper:
    image: 'bitnami/zookeeper:3.8'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      Models:

  kafka:
    image: 'bitnami/kafka:3.7'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
     

    depends_on:
      - zookeeper
    networks:
      Models:

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: shmuel
      MONGO_INITDB_ROOT_PASSWORD: "1234"
      MONGO_INITDB_DATABASE: test
    volumes:
      - mongo-data:/data/db
     
    restart: unless-stopped
    networks:
      Models:


  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      Models:

volumes:
  mongo-data:

networks:
  
  Models: